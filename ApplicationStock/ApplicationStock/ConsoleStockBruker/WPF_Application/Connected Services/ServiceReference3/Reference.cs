//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdus si
//     le code est regénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference3
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDto", Namespace="http://schemas.datacontract.org/2004/07/ProjectStockDTOS")]
    public partial class OrderDto : object
    {
        
        private System.Guid _idField;
        
        private int _nbStockField;
        
        private System.DateTime _orderDateField;
        
        private string _orderNameField;
        
        private ServiceReference3.Stock _stockField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid _id
        {
            get
            {
                return this._idField;
            }
            set
            {
                this._idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _nbStock
        {
            get
            {
                return this._nbStockField;
            }
            set
            {
                this._nbStockField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime _orderDate
        {
            get
            {
                return this._orderDateField;
            }
            set
            {
                this._orderDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _orderName
        {
            get
            {
                return this._orderNameField;
            }
            set
            {
                this._orderNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference3.Stock _stock
        {
            get
            {
                return this._stockField;
            }
            set
            {
                this._stockField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stock", Namespace="http://schemas.datacontract.org/2004/07/ProjectStockLibrary")]
    public partial class Stock : object
    {
        
        private string _entrepriseNameField;
        
        private string _nameField;
        
        private float _valueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _entrepriseName
        {
            get
            {
                return this._entrepriseNameField;
            }
            set
            {
                this._entrepriseNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _name
        {
            get
            {
                return this._nameField;
            }
            set
            {
                this._nameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float _value
        {
            get
            {
                return this._valueField;
            }
            set
            {
                this._valueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.IServiceOrder")]
    public interface IServiceOrder
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetOrders", ReplyAction="http://tempuri.org/IServiceOrder/GetOrdersResponse")]
        ServiceReference3.OrderDto[] GetOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetOrders", ReplyAction="http://tempuri.org/IServiceOrder/GetOrdersResponse")]
        System.Threading.Tasks.Task<ServiceReference3.OrderDto[]> GetOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetById", ReplyAction="http://tempuri.org/IServiceOrder/GetByIdResponse")]
        ServiceReference3.OrderDto GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/GetById", ReplyAction="http://tempuri.org/IServiceOrder/GetByIdResponse")]
        System.Threading.Tasks.Task<ServiceReference3.OrderDto> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/add", ReplyAction="http://tempuri.org/IServiceOrder/addResponse")]
        void add(ServiceReference3.OrderDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/add", ReplyAction="http://tempuri.org/IServiceOrder/addResponse")]
        System.Threading.Tasks.Task addAsync(ServiceReference3.OrderDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/delete", ReplyAction="http://tempuri.org/IServiceOrder/deleteResponse")]
        void delete(ServiceReference3.OrderDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrder/delete", ReplyAction="http://tempuri.org/IServiceOrder/deleteResponse")]
        System.Threading.Tasks.Task deleteAsync(ServiceReference3.OrderDto userDto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IServiceOrderChannel : ServiceReference3.IServiceOrder, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ServiceOrderClient : System.ServiceModel.ClientBase<ServiceReference3.IServiceOrder>, ServiceReference3.IServiceOrder
    {
        
        /// <summary>
        /// Implémentez cette méthode partielle pour configurer le point de terminaison de service.
        /// </summary>
        /// <param name="serviceEndpoint">Point de terminaison à configurer</param>
        /// <param name="clientCredentials">Informations d'identification du client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceOrderClient() : 
                base(ServiceOrderClient.GetDefaultBinding(), ServiceOrderClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceOrder.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceOrderClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceOrderClient.GetBindingForEndpoint(endpointConfiguration), ServiceOrderClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceOrderClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceOrderClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceOrderClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceOrderClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ServiceReference3.OrderDto[] GetOrders()
        {
            return base.Channel.GetOrders();
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.OrderDto[]> GetOrdersAsync()
        {
            return base.Channel.GetOrdersAsync();
        }
        
        public ServiceReference3.OrderDto GetById(int id)
        {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReference3.OrderDto> GetByIdAsync(int id)
        {
            return base.Channel.GetByIdAsync(id);
        }
        
        public void add(ServiceReference3.OrderDto userDto)
        {
            base.Channel.add(userDto);
        }
        
        public System.Threading.Tasks.Task addAsync(ServiceReference3.OrderDto userDto)
        {
            return base.Channel.addAsync(userDto);
        }
        
        public void delete(ServiceReference3.OrderDto userDto)
        {
            base.Channel.delete(userDto);
        }
        
        public System.Threading.Tasks.Task deleteAsync(ServiceReference3.OrderDto userDto)
        {
            return base.Channel.deleteAsync(userDto);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceOrder))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceOrder))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:57973/ServiceOrder.svc");
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceOrderClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceOrder);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceOrderClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceOrder);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceOrder,
        }
    }
}
